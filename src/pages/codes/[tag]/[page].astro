---
import type { CollectionEntry } from 'astro:content';
import ProjectCard from '@/components/ProjectCard.astro';
import BaseLayout from '@/layouts/BaseLayout.astro';
import { getAllProjectTags, getProjectsByTag } from '@/helpers/projects';
import PaginationIndex from '@/components/PaginationIndex.astro';
import { PAGE_SIZE } from '@/consts';

type ProjectsWithPeople = CollectionEntry<'projects'> & {
  people: CollectionEntry<'people'>[];
};

export interface Props {
  page: {
    data: ProjectsWithPeople[];
    currentPage: number;
    lastPage: number;
    url: {
      prev: string;
      next: string;
    };
  };
}

export async function getStaticPaths({ paginate }) {
  const tags: string[] = await getAllProjectTags();

  const page = await Promise.all(
    tags.flatMap(async (tag) => {
      const projects = await getProjectsByTag(tag);

      const pages = paginate(projects, {
        params: { tag },
        pageSize: PAGE_SIZE,
      });

      return pages;
    })
  );

  return page.flat();
}

const { page }: Props = Astro.props;
let { tag } = Astro.params;

if (tag === 'subject') {
  tag = 'Disciplina';
} else if (tag === 'research') {
  tag = 'Pesquisa';
} else if (tag === 'extension') {
  tag = 'Extens√£o';
} else if (tag === 'open source') {
  tag = 'Open Source';
} else {
  tag = tag.toUpperCase();
}
---

<BaseLayout pageTitle={`Projetos de ${tag}`}>
  <div
    class="grid justify-items-stretch gap-5 grid-cols-1 md:grid-cols-2 lg:grid-cols-3"
    data-pagefind-ignore
  >
    {page.data.map((project) => <ProjectCard project={project} />)}
  </div>
  {
    page.lastPage > 1 && (
      <PaginationIndex page={page} type="codes" index={tag} />
    )
  }
</BaseLayout>
